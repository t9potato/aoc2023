==429112== Memcheck, a memory error detector
==429112== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==429112== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==429112== Command: bin/main
==429112== 
==429112== Invalid write of size 8
==429112==    at 0x1098A6: part2 (main.c:125)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a63d00 is 0 bytes after a block of size 1,600 alloc'd
==429112==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==429112==    by 0x10952E: part2 (main.c:80)
==429112==    by 0x1091B7: main (main.c:12)
==429112== 
==429112== Invalid write of size 8
==429112==    at 0x1098CA: part2 (main.c:126)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a63d08 is 8 bytes after a block of size 1,600 alloc'd
==429112==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==429112==    by 0x10952E: part2 (main.c:80)
==429112==    by 0x1091B7: main (main.c:12)
==429112== 
==429112== Invalid write of size 8
==429112==    at 0x109902: part2 (main.c:128)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a64060 is 0 bytes after a block of size 800 alloc'd
==429112==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==429112==    by 0x109552: part2 (main.c:82)
==429112==    by 0x1091B7: main (main.c:12)
==429112== 
==429112== Invalid write of size 8
==429112==    at 0x109975: part2 (main.c:131)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a63d10 is 16 bytes after a block of size 1,600 alloc'd
==429112==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==429112==    by 0x10952E: part2 (main.c:80)
==429112==    by 0x1091B7: main (main.c:12)
==429112== 
==429112== Invalid write of size 8
==429112==    at 0x1099AC: part2 (main.c:132)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a63d18 is 24 bytes after a block of size 1,600 in arena "client"
==429112== 
==429112== Invalid write of size 8
==429112==    at 0x1099E2: part2 (main.c:134)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a64068 is 8 bytes after a block of size 800 alloc'd
==429112==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==429112==    by 0x109552: part2 (main.c:82)
==429112==    by 0x1091B7: main (main.c:12)
==429112== 
==429112== Invalid read of size 8
==429112==    at 0x109740: part2 (main.c:118)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a64060 is 0 bytes after a block of size 800 alloc'd
==429112==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==429112==    by 0x109552: part2 (main.c:82)
==429112==    by 0x1091B7: main (main.c:12)
==429112== 
==429112== Invalid read of size 8
==429112==    at 0x109B88: part2 (main.c:152)
==429112==    by 0x1091B7: main (main.c:12)
==429112==  Address 0x4a63d00 is 0 bytes after a block of size 1,600 alloc'd
==429112==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==429112==    by 0x10952E: part2 (main.c:80)
==429112==    by 0x1091B7: main (main.c:12)
==429112== 
Part 1: 265018614
129
Part 2: 1
==429112== 
==429112== HEAP SUMMARY:
==429112==     in use at exit: 3,664 bytes in 6 blocks
==429112==   total heap usage: 9 allocs, 3 frees, 15,952 bytes allocated
==429112== 
==429112== LEAK SUMMARY:
==429112==    definitely lost: 2,720 bytes in 4 blocks
==429112==    indirectly lost: 0 bytes in 0 blocks
==429112==      possibly lost: 0 bytes in 0 blocks
==429112==    still reachable: 944 bytes in 2 blocks
==429112==         suppressed: 0 bytes in 0 blocks
==429112== Rerun with --leak-check=full to see details of leaked memory
==429112== 
==429112== For lists of detected and suppressed errors, rerun with: -s
==429112== ERROR SUMMARY: 502 errors from 8 contexts (suppressed: 0 from 0)
